version: 2

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            # hack to get vault installed. Should be installed in the docker container
            wget https://releases.hashicorp.com/vault/1.11.3/vault_1.11.3_linux_amd64.zip && \
            unzip vault_1.11.3_linux_amd64.zip -d /tmp && \
            mv /tmp/vault /usr/local/bin/vault && \
            rm vault_1.11.3_linux_amd64.zip 
            vault -version

            # load the vault creds and init the vault
            echo $VAULT_ROLE_ID > vault/role-id
            echo $VAULT_SECRET_ID > vault/secret-id
            vault agent -config=vault/agent.hcl
            export VAULT_TOKEN=`cat /tmp/vault-token`
            export TF_TOKEN_app_terraform_io=`vault kv get -field=TF_TOKEN_app_terraform_io kv/terraformcloud`

            terraform init -input=false
            terraform plan -out tfapply -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy
